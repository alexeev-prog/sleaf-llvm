name: Continuous Integration

on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main

jobs:
  lint:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install Nix
      run: |
        sh <(curl -L https://nixos.org/nix/install) --daemon

    - name: Enter Nix shell and run lint
      run: |
        nix-shell shell.nix --run "pip3 install codespell && cmake -D FORMAT_COMMAND=clang-format-18 -P cmake/lint.cmake"

    - name: Spell check
      if: always()
      run: |
        nix-shell shell.nix --run "cmake -P cmake/spell.cmake"

  coverage:
    needs: [lint]

    runs-on: ubuntu-24.04

    if: github.repository_owner == '<name>' && false

    steps:
    - uses: actions/checkout@v4

    - name: Install Nix
      run: |
        sh <(curl -L https://nixos.org/nix/install) --daemon

    - name: Enter Nix shell and run coverage
      run: |
        nix-shell shell.nix --run "
          cmake --preset=ci-coverage &&
          cmake --build build/coverage -j 2 &&
          ctest --output-on-failure --no-tests=error -j 2 &&
          cmake --build build/coverage -t coverage
        "

    - name: Submit to codecov.io
      uses: codecov/codecov-action@v4
      with:
        file: build/coverage/coverage.info
        token: ${{ secrets.CODECOV_TOKEN }}

  sanitize:
    needs: [lint]

    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Install Nix
      run: |
        sh <(curl -L https://nixos.org/nix/install) --daemon

    - name: Enter Nix shell and run sanitize
      run: |
        nix-shell shell.nix --run "
          cmake --preset=ci-sanitize &&
          cmake --build build/sanitize -j 2 &&
          ctest --output-on-failure --no-tests=error -j 2
        "

  test:
    needs: [lint]

    strategy:
      matrix:
        os: [ubuntu-24.04]
        type: [shared, static]
        include:
        - { type: shared, shared: YES }
        - { type: static, shared: NO }

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Nix
      run: |
        sh <(curl -L https://nixos.org/nix/install) --daemon

    - name: Enter Nix shell and run tests
      run: |
        nix-shell shell.nix --run "
          cmake --preset=ci-$("${{ matrix.os }}".split('-')[0]) -D BUILD_SHARED_LIBS=${{ matrix.shared }} &&
          cmake --build build --config Release -j 2 &&
          cmake --install build --config Release --prefix prefix &&
          ctest --output-on-failure --no-tests=error -C Release -j 2
        "
